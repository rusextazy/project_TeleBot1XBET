from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

router = Router()


class MBANK_REFILL(StatesGroup):
    SUM = State()
    ID = State()
    SKRIN = State()
    language = State()


@router.callback_query(F.data.in_(('mbank_popolnit', 'elkart_popolnit', 'opima_popolnit', 'terminal_popolnit')))
async def process_callback(callback: types.CallbackQuery, state: FSMContext):
    if callback.data == 'mbank_popolnit':
        await callback.message.answer(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ MBANK')
        await callback.message.answer(text='–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è COMüá∞üá¨')
    elif callback.data == 'elkart_popolnit':
        await callback.message.answer(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –≠–ª–∫–∞—Ä—Ç')
        await callback.message.answer(text='–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è COMüá∞üá¨')
    elif callback.data == 'opima_popolnit':
        await callback.message.answer(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ç–∏–º–∞ –ë–∞–Ω–∫')
        await callback.message.answer(text='–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è COMüá∞üá¨')
    elif callback.data == 'terminal_popolnit':
        await callback.message.answer(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–µ—Ä–º–∏–Ω–∞–ª')
        await callback.message.answer(text='–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è COMüá∞üá¨')
    await state.set_state(MBANK_REFILL.SUM)
    await callback.answer()
